nelmio_api_doc:
    use_validation_groups: true
    documentation:
        info:
            title: Yu-Gi-Oh-API
            description: API part for the isma91/yu-gi-oh project
            version: 0.10.0
        components:
            schemas:
                UserLogin:
                    description: "User info after login"
                    type: object
                    properties:
                        username:
                            description: "Username/Pseudo of the User, unique field"
                            type: string
                            maxLength: 180
                            nullable: false
                        jwt:
                            type: string
                        role:
                            type: string
                DeckCardFieldTypeContent:
                    description: "Card info array"
                    type: object
                    properties:
                        id:
                            type: integer
                            description: "Id of the Card to add"
                            nullable: false
                        nbCopie:
                            type: integer
                            description: "Number of Copie to add"
                            nullable: false
                DeckCreateRequest:
                    type: object
                    properties:
                        name:
                            type: string
                            description: "Name of the Deck"
                            nullable: false
                        isPublic:
                            type: boolean
                            description: "If the Deck is going to be seen from other."
                            nullable: true
                        artwork:
                            type: integer
                            description: "Id of the card to use as Artwork"
                            nullable: true
                        deck-card:
                            type: object
                            properties:
                                main-deck:
                                    type: array
                                    description: "Main deck content card.
                                    You can add as many as you want but 40 card is the minimum and 60 the maximum recommended"
                                    items:
                                        $ref: "#/components/schemas/DeckCardFieldTypeContent"
                                extra-deck:
                                    type: array
                                    description: "Extra deck content card.
                                    You can add as many as you want but 15 card is the maximum recommended"
                                    items:
                                        $ref: "#/components/schemas/DeckCardFieldTypeContent"
                                side-deck:
                                    type: array
                                    description: "Side deck content card.
                                    You can add as many as you want but 15 card is the maximum recommended"
                                    items:
                                        $ref: "#/components/schemas/DeckCardFieldTypeContent"
            securitySchemes:
                Bearer:
                    type: http
                    scheme: bearer
                    bearerFormat: JWT
            security:
                - Bearer: [ ]
    models:
        names:
            - { alias: ArchetypeList, type: App\Entity\Archetype, groups: ["archetype_list"] }
            - { alias: CardAttributeList, type: App\Entity\CardAttribute, groups: ["card_attribute_list"] }
            - { alias: CategoryWithSubCategoryList, type: App\Entity\Category, groups: ["category_list"] }
            - { alias: PropertyTypeWithPropertyList, type: App\Entity\PropertyType, groups: ["property_type_list"] }
            - { alias: SubPropertyTypeWithSubPropertyList, type: App\Entity\SubPropertyType, groups: ["sub_property_type_list"] }
            - { alias: SubTypeList, type: App\Entity\SubType, groups: ["sub_type_list"] }
            - { alias: TypeList, type: App\Entity\Type, groups: ["type_list"] }
            - { alias: SearchCardList, type: App\Entity\Card, groups: ["search_card"] }
            - { alias: SearchCardCardAttribute, type: App\Entity\CardAttribute, groups: ["search_card"] }
            - { alias: SearchCardProperty, type: App\Entity\Property, groups: ["search_card"] }
            - { alias: SearchCardPropertyType, type: App\Entity\PropertyType, groups: ["search_card"] }
            - { alias: SearchCardCardPicture, type: App\Entity\CardPicture, groups: ["search_card"] }
            - { alias: SearchCardCategory, type: App\Entity\Category, groups: ["search_card"] }
            - { alias: SearchCardType, type: App\Entity\Type, groups: ["search_card"] }
            - { alias: SearchCardSubType, type: App\Entity\SubType, groups: ["search_card"] }
            - { alias: SearchCardSubProperty, type: App\Entity\SubProperty, groups: ["search_card"] }
            - { alias: SearchCardSubPropertyType, type: App\Entity\SubPropertyType, groups: ["search_card"] }
            - { alias: SearchCardSubCategory, type: App\Entity\SubCategory, groups: ["search_card"] }
            - { alias: CardInfo, type: App\Entity\Card, groups: ["card_info"] }
            - { alias: CardInfoAttribute, type: App\Entity\CardAttribute, groups: ["card_info"] }
            - { alias: CardInfoProperty, type: App\Entity\Property, groups: ["card_info"] }
            - { alias: CardInfoPropertyType, type: App\Entity\PropertyType, groups: ["card_info"] }
            - { alias: CardInfoCategory, type: App\Entity\Category, groups: ["card_info"] }
            - { alias: CardInfoCardPicture, type: App\Entity\CardPicture, groups: ["card_info"] }
            - { alias: CardInfoType, type: App\Entity\Type, groups: ["card_info"] }
            - { alias: CardInfoSubType, type: App\Entity\SubType, groups: ["card_info"] }
            - { alias: CardInfoArchetype, type: App\Entity\Archetype, groups: ["card_info"] }
            - { alias: CardInfoCardSet, type: App\Entity\CardSet, groups: ["card_info"] }
            - { alias: CardInfoCardSetSet, type: App\Entity\Set, groups: ["card_info"] }
            - { alias: CardInfoCardSetRarity, type: App\Entity\Rarity, groups: ["card_info"] }
            - { alias: CardInfoSubProperty, type: App\Entity\SubProperty, groups: ["card_info"] }
            - { alias: CardInfoSubPropertyType, type: App\Entity\SubPropertyType, groups: ["card_info"] }
            - { alias: CardInfoSubCategory, type: App\Entity\SubCategory, groups: ["card_info"] }
            - { alias: DeckUserList, type: App\Entity\Deck, groups: ["deck_user_list"] }
            - { alias: DeckInfo, type: App\Entity\Deck, groups: ["deck_info"] }
            - { alias: DeckInfoCardMainDeck, type: App\Entity\CardMainDeck, groups: ["deck_info", "card_info"] }
            - { alias: DeckInfoCardExtraDeck, type: App\Entity\CardExtraDeck, groups: ["deck_info", "card_info"] }
            - { alias: DeckInfoCardSideDeck, type: App\Entity\CardSideDeck, groups: ["deck_info", "card_info"] }
            - { alias: SetSearchList, type: App\Entity\Set, groups: ["set_search"] }
            - { alias: SetInfo, type: App\Entity\Set, groups: ["set_info"] }
            - { alias: SetInfoCardSet, type: App\Entity\CardSet, groups: ["set_info"] }
            - { alias: SetInfoCardSetRarity, type: App\Entity\Rarity, groups: ["set_info"] }
    areas: # to filter documented areas
        default:
            disable_default_routes: true
